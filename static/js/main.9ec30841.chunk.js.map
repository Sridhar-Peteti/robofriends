{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundary.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardsArray","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GACtB,OACC,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,cACpB,gCACI,6BAAKF,IACL,4BAAIC,WCWFK,EAhBE,SAAC,GAAe,IAAdC,EAAa,EAAbA,OACTC,EAAaD,EAAOE,KAAI,SAACC,EAAKC,GAClC,OACA,cAAC,EAAD,CAEIT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,MAMd,OACG,8BACGH,KCAQI,G,KAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACQ,qBAAKV,UAAU,OAAf,SACI,uBACIA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,QCAfI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAQ,kBAAmBC,OAAO,SAAnE,SACKJ,EAAMK,YCiBJC,G,wDAlBX,WAAYN,GAAO,IAAD,8BACd,gBACKO,MAAO,CACRC,UAAU,GAHA,E,8DAOAC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAS,M,+BAIxB,OAAGG,KAAKJ,MAAMC,SACH,yDAEJG,KAAKX,MAAMK,a,GAhBEQ,cC0CZC,E,kDArCZ,aAAc,IAAD,8BACT,gBAWHC,eAAe,SAACC,GACZ,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAXzC,EAAKZ,MAAQ,CACVlB,OAAQ,GACR4B,YAAc,IAJT,E,gEAOO,IAAD,OACfG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAE,EAAKZ,SAAS,CAACvB,OAAQmC,S,+BAM9B,IAAD,EACyBb,KAAKJ,MAA5BlB,EADF,EACEA,OAAQ4B,EADV,EACUA,YACTQ,EAAiBpC,EAAOqC,QAAO,SAAAC,GAC7B,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASZ,EAAYW,kBAE7D,OAAQvC,EAAOyC,OAGP,sBAAK7C,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAW1B,OAAQoC,WAPlC,6C,GAvBSZ,aCMHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9ec30841.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name,email,id}) => {\r\n    return(\r\n     <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n         <img alt='robot' src={`https://robohash.org/${id}?200x200`}/>\r\n         <div>\r\n             <h2>{name}</h2>\r\n             <p>{email}</p>\r\n         </div>\r\n     </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots})  => {\r\n    const cardsArray = robots.map((user,i) =>{\r\n      return(\r\n      <Card \r\n          key={i} \r\n          id={robots[i].id} \r\n          name={robots[i].name} \r\n          email={robots[i].email}\r\n      />)\r\n   } )\r\n return(\r\n    <div>\r\n      {cardsArray}\r\n    </div> \r\n    );\r\n}\r\nexport default CardList;","import React from 'react';\r\nimport 'tachyons';\r\nconst SearchBox = ({searchChange }) =>{\r\n    return(\r\n            <div className='pa3 '>\r\n                <input \r\n                    className='pa3 ba b--green bg-lightest-blue'\r\n                    type='search' \r\n                    placeholder='search robots'\r\n                    onChange={searchChange}\r\n                />\r\n            </div>\r\n         );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\nconst Scroll = (props) =>{\r\n    return (\r\n        <div style={{overflowY:'scroll', border: '5px solid black', height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props){\r\n        super();\r\n        this.state ={\r\n            hasError: false\r\n        }\r\n    }\r\n    \r\n    componentDidCatch(error, info){\r\n        this.setState({hasError:true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>ooops. That is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\nexport default ErrorBoundary;","import React, {Component} from 'react';\r\nimport CardList from '../Components/CardList'\r\nimport SearchBox from '../Components/SearchBox.js'\r\nimport Scroll from '../Components/Scroll'\r\nimport './app.css'\r\nimport ErrorBoundary from '../Components/ErrorBoundary'\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n         this.state = {\r\n            robots: [],\r\n            searchfield : ''\r\n        }\r\n     }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=> response.json())\r\n        .then(users=>this.setState({robots: users}));\r\n    }\r\n     onSearchChange=(event) => { \r\n         this.setState({searchfield: event.target.value})\r\n     }\r\n       \r\n    render() { \r\n        const {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot=>{\r\n                return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        });\r\n        return !robots.length ?\r\n         <h1>Loading</h1> :\r\n            (\r\n                <div className='tc'>\r\n                <h1 className='f1'>RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                        <CardList  robots={filteredRobots}/>\r\n                    </ErrorBoundary>    \r\n                </Scroll> \r\n                </div>\r\n            );  \r\n    }\r\n }\r\n\r\n export default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App.js'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nReactDOM.render(\n  <React.StrictMode>\n    <App/> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}